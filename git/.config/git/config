
[alias]
    # Git checkout to a branch using fzf to search for branches
	checkout-fzf = !git checkout $(git branch | fzf)

    # Select branch to switch to, preview shows last commit
	cb = !git branch --all | grep -v '^[*+]' | awk '{print $1}' | fzf -0 --preview 'git show --color'

    # Choose stash to apply, preview shows diff
	stash-choose = !git stash list | fzf -0 --preview 'git show --pretty'

    # Delete a stash, preview shows diff
	stash-delete = !git stash list | fzf -0 --preview 'git show --pretty'

    # Delete branches, use <tab> to select multiple, force delete via Db. Preview shows last commit
	branch-delete = !git branch | grep -v '^[*+]' | awk '{print $1}' | fzf -0 --multi --preview 'git show --color'

    # Create a new local branch
	branch-new = !git checkout -b

    # Delete local tag
	tag-delete = !git tag --delete tagname

    # Push current local branch to remote with the same name and track it
	push-remote = !git push -u origin HEAD

    # Pick commit hash and copy it into clipboard, only work on macOS as it has pbcopy
    # Need to implement pbcopy on linux https://superuser.com/questions/288320/whats-like-osxs-pbcopy-for-linux
	pick-hash = !git log --abbrev-commit --color

    # Git add using fzf with preview diff
	add-fzf = !git ls-files --deleted --modified --other --exclude-standard | fzf -0 -m --preview 'git diff --color'

[apply]
    # Detect whitespace errors when applying a patch.
    whitespace = fix

[branch]
    # Show most recently changed branches first.
    sort = -committerdate

[commit]
    gpgsign = true
    verbose = true

[core]
    # Use `.gitattributes`. Be careful with existing repo with binary files already checked in as it may re-write history!
    #attributesfile = ~/.gitattributes

    # convert CRLF to LF on commit as we don't want to store CRLF in the repo
    autocrlf = input

    # Make `git rebase` safer on macOS.
    # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
    trustctime = false

	editor = micro

    # Global gitignore file
    excludeFiles = ~/.config/git/ignore

    pager = delta

[column]
    ui = auto

[delta]
    navigate = true
    side-by-side = true

[interactive]
    diffFilter = delta --color-only

[diff]
    algorithm = histogram
    colorMoved = default
    mnemonicPrefix = true
    renames = true

[fetch]
    # Delete local branches that have been removed from remote on fetch/pull
    prune = true
    pruneTags = true
    all = true

[format]
    pretty = format:%C(dim yellow)%h%Creset%C(brightgreen)%d%Creset %C(dim brightblack)- %Creset%C(brightblue)%s  %C(magenta)%an  %C(dim brightblack)(%ar - %ad)  %Creset

[help]
    # Automatically correct and execute mistyped commands.
    autocorrect = 1

[init]
    defaultBranch = main

[log]
    date = format:%x, %I:%M %p

[merge]
    conflictStyle = zdiff3

[mergetool]
    keepBackup = false

[pull]
	rebase = true

[rebase]
    autoSquash = true
    autoStash = true
    updateRefs = true

[rerere]
    enabled = true

[push]
    # https://git-scm.com/docs/git-config#git-config-pushdefault
    default = simple
    # Make `git push` push relevant annotated tags when pushing branches out.
    followTags = true
    autoSetupRemote = true

[tag]
    sort = version:refname

# Code path on personal machine
[includeIf "gitdir:~/Code/**"]
    path = ~/.config/git/personal.inc

# Code path on work machine
[includeIf "gitdir:~/Development/dotfiles/**"]
    path = ~/.config/git/personal.inc

# Code path on work machine
[includeIf "gitdir:~/Development/my-projects/**"]
    path = ~/.config/git/personal.inc

# Code path inside DevContainer of IntelliJ
[includeIf "gitdir:/IdeaProjects/**"]
    path = ~/.config/git/personal.inc

# Code path inside DevContainer CLI
[includeIf "gitdir:/workspaces/"]
    path = ~/.config/git/personal.inc


# Code path on work machine
[includeIf "gitdir:~/Development/pc-projects/**"]
    path = ~/.config/git/work.inc

[url "ssh://git@bitbucket.org/"]
	insteadOf = https://bitbucket.org/

[url "ssh://git@github.com/"]
	insteadOf = https://github.com/

[url "ssh://git@gitlab.com/"]
	insteadOf = https://gitlab.com/
